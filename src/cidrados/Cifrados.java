package cidrados;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author diaza
 */
public class Cifrados extends javax.swing.JFrame {
    /**
     * Creates new form Cifrados
     */
    public Cifrados() {
        initComponents();
        jFileChooser1.setVisible(false);
        this.setExtendedState(MAXIMIZED_BOTH);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre del Archivo");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setText("Contenido Del Mensaje:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(438, 438, 438)
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(144, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jButton1.setText("Seleccionar Archivo");
        jButton1.setAutoscrolls(true);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Cifrar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Descifrado");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jLabel5.setText("Llave           :");

        jButton4.setText("Generar LLave");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(99, 99, 99)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton3)
                .addGap(47, 47, 47)
                .addComponent(jButton2)
                .addGap(154, 154, 154)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
File archivo;
FileReader fr = null;
BufferedReader br = null;
String linea="",l="",linea1="";

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
jFileChooser1.setVisible(true);   
jFileChooser1.showOpenDialog(null);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked
SecretKey clave;
String EncodedKey;
FileInputStream in;
FileOutputStream out;
byte[] decodedKey ;
int bytesleidos ;
byte[] buffer;
Cipher cifrador;
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
    if(linea.length() != 1){
            mensajeAyuda();
        }
        
        
        
        /*
        
        Para poder utilizar el cifrado simetrico DES, debemos de cargar el tipo de cifrado
        a traves del uso de "provider" 
        
        Paso 1.- crear e inicilizar la clave o llave privada
        
        */
        try{
        EncodedKey = Base64.getEncoder().encodeToString(jTextField1.getText().getBytes());
        decodedKey = Base64.getDecoder().decode(EncodedKey);
        clave = new SecretKeySpec(decodedKey, 0, decodedKey.length, "DES"); 
        System.out.println("la clave es: "+clave+"\n");
        mostrarBytes(clave.getEncoded());
        System.out.println();
        cifrador = Cipher.getInstance("DES/ECB/PKCS5Padding");
        
        //tenemos que crear el menu para la carga del archivo a cifrar
        
        System.out.println("2.- Cifrar con DES el fichero : "+ archivo.getName() + ", dejar el resultado en: "
        + archivo.getName() + ".cifrado");
        
        //tenemos que cargar un archivo de texto el cual lo va  acifrar con des y una vez cifrado va a 
        //generar un archivo que lo va a guardar dentro del proyecto
        
        //la parte mas complicada el cifrado por pasos
        
        cifrador.init(Cipher.ENCRYPT_MODE, clave);
        
        //wiii que cansado ufff
        
        //entonces tenemos que transformar y leer el fichero en bytes
        
        buffer = new byte[1000];
        
        byte[] bufferCifrado;
        
        
        //vamos a generar el archivo
        
        in = new FileInputStream(archivo);
        out = new FileOutputStream(archivo.getName()+"cifrado.txt");
        
        //tenemos que empezar por la lectura del archivo y converlo en bytes
        
        bytesleidos = in.read(buffer, 0, 1000);
        while(bytesleidos != -1){
            bufferCifrado  = cifrador.update(buffer, 0, bytesleidos);
            out.write(bufferCifrado);
            bytesleidos = in.read(buffer, 0, bytesleidos);
        }
        //cuando termine de leer el archivo
        bufferCifrado = cifrador.doFinal();
        //escribir el archivo de salida
        out.write(bufferCifrado);
        in.close();
        out.close();
        }catch(Exception e){}
    }//GEN-LAST:event_jButton2MouseClicked

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        jTextArea1.setText("");
        linea="";l="";
        archivo=jFileChooser1.getSelectedFile();
        try{fr = new FileReader (archivo);
        br = new BufferedReader(fr);
        //linea1=br.readLine();
        while(br.ready()==true){
         l=br.readLine();
         linea=linea+"\n"+l;}
        }catch(IOException e){}
        jLabel2.setText(archivo.getName());    
        jTextArea1.setText(linea);
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        try{System.out.println("Se preciono el btn3");
        EncodedKey = Base64.getEncoder().encodeToString(jTextField1.getText().getBytes());
        decodedKey = Base64.getDecoder().decode(EncodedKey);
        clave = new SecretKeySpec(decodedKey, 0, decodedKey.length, "DES"); 
        mostrarBytes(clave.getEncoded());
        cifrador = Cipher.getInstance("DES/ECB/PKCS5Padding");
        cifrador.init(Cipher.DECRYPT_MODE, clave);
        System.out.println("\nxD btn3 Cidrado B)");
        System.out.println("3.- Descifrar con DES el fichero : "+ archivo.getName() + ", dejar el resultado en: "
        + archivo.getName() + ".decifrado");
        byte[] bufferPlano;
        buffer = new byte[1000];
        in = new FileInputStream(archivo);
        out = new FileOutputStream(archivo.getName()+"descifrado.txt");
            System.out.println("si llega");
        bytesleidos = in.read(buffer, 0, 1000);
        while(bytesleidos != -1){
            bufferPlano  = cifrador.update(buffer, 0, bytesleidos);
            out.write(bufferPlano);
            bytesleidos = in.read(buffer, 0, bytesleidos);
        }
            System.out.println("hmmm");
        //cuando termine de leer el archivo
        bufferPlano = cifrador.doFinal();
        //escribir el archivo de salida
            System.out.println("hmmmmmmm");
        out.write(bufferPlano);
        
        in.close();
        out.close();
        
        }catch(Exception e){}
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        try {
            KeyGenerator generadorDES = KeyGenerator.getInstance("DES");
            generadorDES.init(56);
            clave = generadorDES.generateKey();
            System.out.println("la clave es: "+clave+"\n");
            byte[] bytes = clave.getEncoded();
        String str = new String(bytes, java.nio.charset.StandardCharsets.UTF_8);
            mostrarBytes(clave.getEncoded());
        jTextField1.setText(str);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Cifrados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4MouseClicked
    
    public static void mensajeAyuda() {
        System.out.println("Ejemplo de Cifrado DES, utilizando una llave HASH");
        System.out.println("\t Sintesis: Manejo de ficheros por favor agregue un fichero a este"
                + "programa para que pueda ejecutarse, debe de ser un texto plano '.txt' ");
        System.out.println();
    }

    public static void mostrarBytes(byte[] buffer) {
        System.out.write(buffer, 0, buffer.length);
    }
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cifrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cifrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cifrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cifrados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cifrados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
